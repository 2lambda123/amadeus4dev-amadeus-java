plugins {
    id 'io.franzbecker.gradle-lombok' version '1.12'
    id 'java'
    id 'net.saliman.cobertura' version '2.5.4'
    id 'checkstyle'
    id 'osgi'
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

group = GROUP
version = VERSION_NAME

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

configurations {
    doclava
}

repositories {
    jcenter()
}

dependencies {
    compile 'com.google.code.gson:gson:2.8.2'
    compileOnly "org.projectlombok:lombok:1.16.16"
    testCompile group: 'junit', name: 'junit', version:'4.12'
    testCompile "org.mockito:mockito-core:2.12.0"
    testRuntime "org.slf4j:slf4j-api:1.7.10"
    doclava 'com.google.doclava:doclava:1.0.6'
}

checkstyle {
    toolVersion = '8.8'
}

jar {
    manifest {
        attributes("Implementation-Title": POM_NAME,
                   "Implementation-Version": VERSION_NAME,
                   "Implementation-Vendor": VENDOR_NAME)

        version = VERSION_NAME
        symbolicName = POM_ARTIFACT_ID

        instruction 'Export-Package', '*'
    }
}

import io.franzbecker.gradle.lombok.task.DelombokTask

task delombok(type: DelombokTask, dependsOn: compileJava) {
    ext.outputDir = file("$buildDir/delombok")
    outputs.dir(outputDir)
    sourceSets.main.java.srcDirs.each {
        inputs.dir(it)
        args(it, "-d", outputDir)
    }
}

javadoc {
    dependsOn project.configurations.doclava
    dependsOn delombok
    source = delombok.outputDir
    failOnError = false
    options.memberLevel = JavadocMemberLevel.PUBLIC
    title = null
    options.doclet = "com.google.doclava.Doclava"
    options.docletpath = configurations.doclava.files.asType(List)
}


cobertura {
    coverageFormats = ['html', 'xml']
    coverageIgnoreTrivial = true
}